{
  "name": "local-tld",
  "version": "4.0.0",
  "description": "Maintain a TLD on localhost for all your projects.",
  "main": "bin/local-tld-service",
  "dependencies": {
    "dnsserver": "https://github.com/sstephenson/dnsserver.js/archive/library.tar.gz",
    "watchfd": "~0.0.9",
    "http-proxy": "~0.8.7"
  },
  "devDependencies": {},
  "scripts": {
    "postinstall": "./bin/local-tld-setup",
    "preuninstall": "./bin/local-tld-uninstall"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com:hoodiehq/local-tld"
  },
  "keywords": [
    "tld",
    "pow"
  ],
  "os": [
    "darwin"
  ],
  "author": {
    "name": "Jan Lehnardt",
    "email": "jan@apache.org"
  },
  "license": "Apache 2.0",
  "readmeFilename": "README.md",
  "readme": "# Local TLD\n\nLocal TLD maintains a local development top level domain that you can hook various projects into.\n\nIf you know `pow`, this is `pow` without the Rack part.\n\nMac OS X only, for the time being. Cross platform support desired, if you can contribute it! :)\n\n\n## Er what?\n\nHere’s an example. What if you maintained two web projects A and B and have a local setup of both, and you’d like to work on the both at the same time, or switch easily, and you don’t want to mess with things like `http://localhost:8888` because that is just annoying and ugly.\n\nWhat if you could have these two nice addresses:\n\n    http://myfancyprojectA.dev\n    http://thatotherprojectB.dev\n\nYes, you can do that by messing with `/etc/hosts`, but it ain’t pretty, and you have to do it for every new project and it is ugly.\n\n\n## Setup\n\n    $ npm -g install local-tld\n      # or for now git clone $thisrepo\n    $ $EDITOR ~/.local-tld.json\n    {\n      \"8000\": {\n        \"name\": \"myfancyprojectA\"\n      },\n      \"8001\": {\n        \"name\": \"thatotherprojectB\"\n      }\n    }\n\nDat it. `/.local-tld.json` maps the a subdomain to a TCP port. So if you have a httpd running on `localhost:8000` you can now reach it by going to `http://myfancyprojectA.dev`.\n\n\n## I want my app to register itself with local-tld!\n\nSee https://github.com/hoodiehq/local-tld-lib\n\n\n## Ok cool, how does it work?\n\nThis uses a cool dynamic DNS system that is built into Mac OS X. Local TLD runs a minimal DNS lookup server that does the address translation magic.\n\n## I want subdomains!\nEasy. Just make your configuration look like this:\n\n```json\n{\n  \"8000\": {\n    \"name\": \"myfancyprojectA\",\n    \"aliases\": [\"subdomain1\", \"subdomain2\"]\n  }\n}\n```\n\nNow, you should be able to reach `localhost:8000` from `http://myfancyprojectA.dev`, `http://subdomain1.myfancyprojectA.dev`, and `http://subdomain2.myfancyprojectA.dev`!\n\n## No Original Work\n\nThis is all ripped out of `pow`, we don’t claim any credit.\n\n\n## License\n\nApache 2 License\n\n\n## Copyright\n\n(c) 2013 Jan Lehnardt <jan@apache.org>\n",
  "bugs": {
    "url": "https://github.com/hoodiehq/local-tld/issues"
  },
  "_id": "local-tld@4.0.0",
  "dist": {
    "shasum": "6c4c1f7acb45ef1169ab3b68d61ae7efe5875fd8"
  },
  "_from": "local-tld@4.0.x",
  "_resolved": "https://registry.npmjs.org/local-tld/-/local-tld-4.0.0.tgz"
}
